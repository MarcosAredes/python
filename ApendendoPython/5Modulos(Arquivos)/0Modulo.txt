Em Python, um módulo é um arquivo contendo código Python que pode incluir funções, 
classes e variáveis. O principal propósito de dividir o código em módulos é organizar 
e reutilizar o código de forma eficiente. Vamos explorar as principais características
dos módulos:

----------------------------------------------------------------------------------------

1.Organização do Código:

° Os módulos ajudam na organização do código ao dividir o código-fonte em unidades lógicas
e independentes.

° Cada módulo pode conter várias funções, classes e variáveis relacionadas a um 
determinado contexto.

---------------------------------------------------------------------------------------------

2.Reutilização de Código:

° Módulos permitem a reutilização de código. Se você tem uma funcionalidade específica em
um módulo, pode importar esse módulo em diferentes partes do seu projeto ou em 
diferentes projetos.

Importação de Módulos:

° Para usar um módulo em um arquivo Python, você usa a declaração import. Por exemplo, 
import meumodulo.

° Depois de importar um módulo, você pode acessar suas funções, classes ou variáveis 
usando a notação de ponto, como meumodulo.funcao().

----------------------------------------------------------------------------------------------

3.Namespace:

° Módulos fornecem um namespace separado para evitar conflitos de nomes. Isso significa 
que funções, classes e variáveis em um módulo não entram em conflito com nomes semelhantes
em outros módulos ou no código principal.

--------------------------------------------------------------------------------------------------

4.Módulos Embutidos:

°Python também possui muitos módulos embutidos que fornecem funcionalidades adicionais. 
Alguns exemplos incluem math para operações matemáticas, datetime para manipulação de 
datas e horas, e assim por diante.

--------------------------------------------------------------------------------------------------

Ex:

# modulo.py

def saudacao(nome):
    return f"Olá, {nome}!"

def soma(a, b):
    return a + b

--------------------------

import meumodulo

print(meumodulo.saudacao("Alice"))
print(meumodulo.soma(3, 5))

Não é aconselhável utilizar em codigos grandes(Jogando todas as funções)
dentro de um só modulo vai separando 
EX:

1Main.py
Funcao1.py (Quando for modulo o numero e sempre no final)


2Main.py
Funcao2.py (Quando for modulo o numero e sempre no final)

Para que não fique desorganizado
--------------------------------------------------------------------------------------------

Você pode puxar o modulo pelo from ou import 

*********************************************
//Função//

def ola():
    print("Olá, M4SS")


def soma():
    print(3 + 6)

************************************************
//Import// Você vai puxar tudo que tem no seu codigo.

import funcao


funcao.ola()

funcao.soma

**************************************************
//from// Você vai importar apenas as funções desejadas

from funcao1 import ola, soma (Você pode utilizar o '*' para puxar tudo mas depois vai dar merda)


ola()

soma()
********************************************************


Packages:

Os Packages são pastas que contem algum arquivo .py que você ira puxar
as funções dele para poder utilizar-lo.
Para poder utilizar o package você tem que criar um arquivo 
__init__.py para q possa inicializar o package e ler no mesmo nivel do
main.py e funcao.py 

depois de criar o arquivo __init__.py e um outro arquivo q voce queira usar
o codigo para  importar irá ficar assim


**************************************************

from funcao1 import ola, soma (Normal)

from packages.cadastro import client(Packages)

ola()

soma()

client()

******************************************************

----------------------------------------------------------------------------------------------
