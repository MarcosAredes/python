Em Python, funções são blocos de código reutilizáveis que realizam 
uma tarefa específica. Elas ajudam a organizar o código, facilitando 
a leitura, manutenção e reutilização. 

Função --> Modulo --> Package --> library
(item) -->(sessão) --> (especialidade) --> (Biblioteca)
(Maça) -->(Frutas) --> (Sacolão)  --> -->  (Supermercado)  

-----------------------------------------------------------------------------------

Função

Como funciona uma Função: Função foi feita para que você não fique se repitindo,
Ex: se você escrever um código você não precisa ficar copiando e colando, você da um nome
para função/grupo de códigos depois chama ele lá em baixo sem digitar tudo de novo.
para se chamar uma função se chama com "def"

    
def lojinha():
    print('Olá Mustang !')
    print('Temos 5 notebooks em estoque')

lojinha()

#Tanto de código
#Tanto de código
#Tanto de código
#Tanto de código
#Tanto de código
#Tanto de código

lojinha()

'''
Resultado:
Olá Mustang !
Temos 5 notebooks em estoque
Olá Mustang !
Temos 5 notebooks em estoque
'''

------------------------------------------------------------------------------------------------------------

Variaveis dentro de funções: 
Variaveis e funções funcionam de formas diferentes de uma maneira boa

Criando função de soma:

Code;
***************************************

def somar_divida():
    numero1 = 20
    numero2 = 50
    resultado = numero1 + numero2
    print(resultado)

somar_divida()

***************************************

Var = Variaveis
Var que está fora da função são chamadas de variaveis globais.
Var que está dentro da função e variaveis que pertence aquela função não pertencendo a parte global do código.
Sendo por isso que você consegue utilizar as mesmas variaveis sem problema nenhum:

*******************************************

def somar_divida():
    numero1 = 20
    numero2 = 50
    resultado = numero1 + numero2
    print(resultado)

somar_divida()

def somar_divida1():
    numero1 = 20
    numero2 = 50
    resultado = numero1 + numero2
    print(resultado)

somar_divida()

***********************************************

Usando as mesmas variaveis sem erro no codigo.

--------------------------------------------------------------------------------------------------------------------------------

Parâmetros Argumento Em uma Função:

Basicamente o que iria se repetir 3x vai reduzir para 1 mas chamando 3x:

Saindo disso:
*********************************************
def lojinha():
    print('Olá Mustang !')
    print('Temos 5 notebooks em estoque')

lojinha()


def lojinha2():
    print('Olá Camaro!')
    print('Temos 3 notebooks em estoque')

lojinha2()


def lojinha3():
    print('Olá plymouth !')
    print('Temos 1 notebooks em estoque')

lojinha3()
***********************************************

Para isso:

************************************************
 
             # Esse e o paramentro
def boas_vindas(nome, quantidade):
    print(f'Olá {nome}.')
    print(f'Temos {str(quantidade)} notebooks em estoque')

boas_vindas('Mustang', 5)
boas_vindas('Camaro', 3)
boas_vindas('plymouth', 1)
            #Aqui são os argumentos

*****************************************************
Lembre-se que os paramentros vem sempre dentro do () def
E os argumentos no () de quando vai imprimir

-------------------------------------------------------------------------------------------------------------------------------------

Argumentos Default e Nondefault:

Default = Aquele que você define o valor no paramentro
Non-Default = Aquele que você não define o valor no paramentro

********************************************************************************************

            #  O parametro quantidade e o Default pois o valor foi definido no parametro
def lojinha(nome, quantidade=9):
    print(f'Olá {nome} !')
    print(f'Temos {str(quantidade)} notebooks em estoque')

lojinha('otario') 

'''

Default pode ser alterado dentro do Non Default 

But, mas, pqp

Default e Non Default tem q seguir a ordem

1° Non Default e depois --> Non Default

Non Default --> Non Default

No codigo seria

lojinha('O nome') e depois como quantidade e = default vem depois pois já esta definido 

Regra = Sempre colcocar Default no FINAL

'''

-----------------------------------------------------------------------------------------------------------------------------------------------------

Print ou Return em Funções:

Funções fazem duas coisas ou realizam tarefas ou retorna um valor.


********************************************************************


def client1(nome):
    print(f'O que o senhor {nome} gostaria')

client1('Cadabra')

Isso e uma tarefa pois imprime o que você pede sem armazenar nada

**********************************************************************

def client2(nome):
    return f'Olá {nome}'

print(client2('AbraCadabra'))

Esse retorna um valor que fica armazenado

*************************************************************************

Vários argumentos xargs com números:

****************************************

def soma(*numeros):
    resultado = 0
    for num in numeros:
        resultado += num
    return resultado

x = soma(2, 3, 4, 7)
print(x)

*****************************************

Vários argumentos xargs nomeando parametros:

def agencia(**carro):
    return carro


print(agencia(modelo=' Gol' ,cor=' Branco' , motor= 2.0))

-------------------------------------------------------------------------------------------------------------------------------------------------

Importando Modulos:

E Basicamente importar Biblioteca

*********************************

import math

print(math.factorial(4))

**********************************

E você pesquisa se tem a Biblioteca que você precisa e vê como funciona.
